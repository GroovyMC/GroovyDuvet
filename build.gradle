plugins {
    id "com.dorongold.task-tree" version "2.1.0"
    alias libs.plugins.quilt.loom apply false
    id 'org.cadixdev.licenser' version '0.6.1' apply false
    id 'io.github.groovymc.modsdotgroovy' version '1.1.0' apply false
}

subprojects.findAll { !(it.name in ['wrapper','forge'])  }.each { p ->
    p.with {
        apply plugin: libs.plugins.quilt.loom.get().pluginId
        apply plugin: 'io.github.groovymc.modsdotgroovy'

        modsDotGroovy {
            dslVersion = '1.1.1'
            platform 'quilt'
        }

        dependencies {
            minecraft libs.minecraft
            mappings loom.layered() {
                officialMojangMappings()
                parchment("org.parchmentmc.data:parchment-${libs.versions.parchment.minecraft.get()}:${libs.versions.parchment.mappings.get()}@zip")
            }
            modImplementation libs.quilt.loader

            modImplementation libs.qsl

            modImplementation libs.groovy
        }
    }
}

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'
    apply plugin: 'org.cadixdev.licenser'

    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}-${archivesBaseName}" }
        }
    }

    license {
        header = rootProject.file('header.txt')
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"
        it.options.release = 17
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        withSourcesJar()
    }

    task groovydocJar(type: Jar, dependsOn: groovydoc ) {
        classifier 'javadoc' // must use javadoc classifier to be able to deploy to Sonatype
        from groovydoc.destinationDir
    }

    tasks.build.dependsOn(tasks.groovydocJar)

    artifacts {
        archives groovydocJar
    }
}
