plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}

archivesBaseName ="${rootProject.name}-forge"

minecraft {
    mappings channel: 'official', version: '1.19.2'
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.1.1'

    implementation libs.groovy
    implementation libs.groovy.contracts
    implementation libs.groovy.datetime
    implementation libs.groovy.nio
    implementation libs.groovy.macro
    implementation libs.groovy.macro.library
    implementation libs.groovy.templates
    implementation libs.groovy.typecheckers
    implementation libs.groovy.dateutil
    implementation libs.groovy.ginq
    implementation libs.groovy.toml
    implementation libs.groovy.json
}

jar {
    manifest {
        attributes([
                'Specification-Title': 'GroovyDuvet - Forge',
                'Specification-Vendor': 'Luke Bemish',
                'Specification-Version': 1,
                'Implementation-Title':"${archivesBaseName}",
                'Implementation-Version': project.version,
                'Implementation-Vendor' : 'Luke Bemish',
                'Implementation-Timestamp': new Date().format(/yyyy-MM-dd'T'HH:mm:ssZ/),
                'GitCommit': getGitCommit(),
                'Automatic-Module-Name': 'io.github.lukebemish.groovyduvet',
                'FMLModType': 'GAMELIBRARY'
        ])
    }
}
jar.finalizedBy('reobfJar')

def wrapperGroovy = project(':wrapper:minecraft').sourceSets.main.allGroovy
def wrapperJava = project(':wrapper:minecraft').sourceSets.main.allJava

tasks.withType(AbstractCompile) {
    source wrapperGroovy
    source wrapperJava
}

tasks.sourcesJar {
    from wrapperGroovy
    from wrapperJava
}

groovydoc {
    use = true
    docTitle = "GroovyDuvet v${version} - Forge API"
}

task groovydocJar(type: Jar, dependsOn: groovydoc ) {
    classifier 'javadoc' // must use javadoc classifier to be able to deploy to Sonatype
    from groovydoc.destinationDir
}

tasks.build.dependsOn(tasks.groovydocJar)

tasks.groovydoc {
    source wrapperGroovy
    source wrapperJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifacts = [jar, sourcesJar, groovydocJar]
        }
    }
    repositories {
        maven {
            name = 'ModdingInquisitionMavenRepo'
            url = 'https://maven.moddinginquisition.org/releases'
            credentials {
                username = findProperty('inquisitionMavenUser') ?: ''
                password = findProperty('inquisitionMavenPassword') ?: ''
            }
        }
    }
}

tasks.withType(JavaCompile).each {
    it.enabled = false
}