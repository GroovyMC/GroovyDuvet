plugins {
    id 'groovy'
    id 'maven-publish'
    alias libs.plugins.quilt.loom
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'io.github.groovymc.modsdotgroovy' version '1.1.1'
}

version = '1.1.0'
group = 'io.github.lukebemish.groovymc'

modsDotGroovy {
    dslVersion = '1.1.3'
    platform 'quilt'
}

repositories {
    maven {
        name = "TheModdingInquisition"
        url = 'https://maven.moddinginquisition.org/releases'
    }
}

dependencies {
    minecraft libs.minecraft
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${libs.versions.parchment.minecraft.get()}:${libs.versions.parchment.mappings.get()}@zip")
    }
    modImplementation libs.quilt.loader

    modImplementation libs.qsl

    modImplementation("io.github.lukebemish.groovyduvet:fatjar")
    runtimeOnly("io.github.lukebemish.groovyduvet:groovy")
}

jar {
    from(project.file("../LICENSE")) {
        rename { "${it}-${archivesBaseName}" }
    }
}

license {
    header = project.file('../header.txt')
    exclude '**/package-info.java'
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withSourcesJar()
}

processResources {
    inputs.property "version", version

    filesMatching('META-INF/groovy/') {
        expand "version": version
    }
}

tasks.withType(GroovyCompile) {
    groovyOptions.optimizationOptions.indy = true
    groovyOptions.optimizationOptions.groovydoc = true
}
